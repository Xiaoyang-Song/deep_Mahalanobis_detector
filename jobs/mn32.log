Namespace(batch_size=200, dataset='mnist', dataroot='./data', ckpt='mnist-32', nf=32, n_test=5000, outf='./output/', num_classes=10, net_type='densenet', gpu=0)
load model: densenet
load target data:  mnist
get sample mean and covariance
/gpfs/accounts/sunwbgt_root/sunwbgt98/xysong/deep_Mahalanobis_detector/lib_generation.py:70: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  data = Variable(data, volatile=True)

 Training Accuracy:(98.55%)

get Mahalanobis scores
  0%|          | 0/7 [00:00<?, ?it/s]Noise: 0.0
/gpfs/accounts/sunwbgt_root/sunwbgt98/xysong/deep_Mahalanobis_detector/lib_generation.py:183: UserWarning: This overload of add is deprecated:
	add(Tensor input, Number alpha, Tensor other, *, Tensor out)
Consider using one of the following signatures instead:
	add(Tensor input, Tensor other, *, Number alpha, Tensor out) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  tempInputs = torch.add(data.data, -magnitude, gradient)
/gpfs/accounts/sunwbgt_root/sunwbgt98/xysong/deep_Mahalanobis_detector/lib_generation.py:186: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  noise_out_features = model.intermediate_forward(Variable(tempInputs, volatile=True), layer_index)
