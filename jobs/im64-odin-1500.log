Namespace(batch_size=100, dataset='imagenet10', ckpt='imagenet10-64-0-o1', nf=64, n_test=5000, dataroot='./data', outf='output/', num_classes=10, net_type='densenet', gpu=0)
load model: densenet
load target data:  imagenet10
Training dataset size:  13000
Dataset size:  10400 2600 500
3100
  0%|          | 0/4 [00:00<?, ?it/s]/gpfs/accounts/sunwbgt_root/sunwbgt98/xysong/deep_Mahalanobis_detector/lib_generation.py:254: UserWarning: This overload of add is deprecated:
	add(Tensor input, Number alpha, Tensor other, *, Tensor out)
Consider using one of the following signatures instead:
	add(Tensor input, Tensor other, *, Number alpha, Tensor out) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  tempInputs = torch.add(data.data,  -magnitude, gradient)
/gpfs/accounts/sunwbgt_root/sunwbgt98/xysong/deep_Mahalanobis_detector/lib_generation.py:255: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  outputs = model(Variable(tempInputs, volatile=True))
Temperature: 1 / noise: 0
######################################
Testing on DTD Texture
Out-distribution: DTD
Testing set size: 1600, 4140
######################################
Testing on LSUN-C
Out-distribution: LSUN-C
/gpfs/accounts/sunwbgt_root/sunwbgt98/xysong/deep_Mahalanobis_detector/lib_generation.py:255: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.
  outputs = model(Variable(tempInputs, volatile=True))
